<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files\microsoft visual studio 11.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="11.0">
 <Namespaces>
  <Namespace Name="AuthenticationUser">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2017-06-15 08:46:58Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'AuthenticationUser' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="AuthenticationUser.Controllers">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2017-06-15 08:46:58Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'AuthenticationUser.Controllers' with another namespace.</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="D:\$c00peN\MVC\ClsPrac\Authentication_User\Authentication_User\bin\Authentication_User.dll">
   <Modules>
    <Module Name="authentication_user.dll">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2017-06-15 08:46:58Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'Authentication_User.dll' with a strong name key.</Issue>
      </Message>
      <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2017-06-15 08:46:58Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="95" Level="Error">Remove the underscores from assembly name 'Authentication_User.dll'.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2017-06-15 08:46:58Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'Authentication_User.dll' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="AuthenticationUser">
       <Types>
        <Type Name="FilterConfig" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#RegisterGlobalFilters(System.Web.Mvc.GlobalFilterCollection)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-06-15 08:46:58Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\$c00peN\MVC\ClsPrac\Authentication_User\Authentication_User\App_Start" File="FilterConfig.cs" Line="10">In externally visible method 'FilterConfig.RegisterGlobalFilters(GlobalFilterCollection)', validate parameter 'filters' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MvcApplication" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Mvc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-06-15 08:46:58Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Mvc' in type name 'MvcApplication'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Application_Start()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2017-06-15 08:46:58Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="d:\$c00peN\MVC\ClsPrac\Authentication_User\Authentication_User" File="Global.asax.cs" Line="16">The 'this' parameter (or 'Me' in Visual Basic) of 'MvcApplication.Application_Start()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RouteConfig" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Status="Active" Created="2017-06-15 08:46:58Z" FixCategory="Breaking">
           <Issue Name="CSharp2_0" Certainty="90" Level="Error">Because type 'RouteConfig' contains only 'static' members, mark it as 'static' to prevent the compiler from adding a default public constructor.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="WebApiConfig" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Api" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-06-15 08:46:58Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Api' in type name 'WebApiConfig'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Register(System.Web.Http.HttpConfiguration)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-06-15 08:46:58Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\$c00peN\MVC\ClsPrac\Authentication_User\Authentication_User\App_Start" File="WebApiConfig.cs" Line="12">In externally visible method 'WebApiConfig.Register(HttpConfiguration)', validate parameter 'config' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="AuthenticationUser.Controllers">
       <Types>
        <Type Name="HomeController" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Create(AuthenticationUser.Models.All_User)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-06-15 08:46:58Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\$c00peN\MVC\ClsPrac\Authentication_User\Authentication_User\Controllers" File="HomeController.cs" Line="54">In externally visible method 'HomeController.Create(All_User)', validate parameter 'allUser' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Delete(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2017-06-15 08:46:58Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="d:\$c00peN\MVC\ClsPrac\Authentication_User\Authentication_User\Controllers" File="HomeController.cs" Line="94">Replace method 'HomeController.Delete(int)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Details(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2017-06-15 08:46:58Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="d:\$c00peN\MVC\ClsPrac\Authentication_User\Authentication_User\Controllers" File="HomeController.cs" Line="28">Replace method 'HomeController.Details(int)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Edit(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2017-06-15 08:46:58Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="d:\$c00peN\MVC\ClsPrac\Authentication_User\Authentication_User\Controllers" File="HomeController.cs" Line="66">Replace method 'HomeController.Edit(int)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LogIn()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="LogIn" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2017-06-15 08:46:58Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="d:\$c00peN\MVC\ClsPrac\Authentication_User\Authentication_User\Controllers" File="HomeController.cs" Line="130">Replace the term 'LogIn' in member name 'HomeController.LogIn()' with the preferred alternate 'LogOn'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LogIn(System.Web.Mvc.FormCollection)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="formcl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-06-15 08:46:58Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="d:\$c00peN\MVC\ClsPrac\Authentication_User\Authentication_User\Controllers" File="HomeController.cs" Line="135">In method 'HomeController.LogIn(FormCollection)', correct the spelling of 'formcl' in parameter name 'formcl' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="LogIn" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2017-06-15 08:46:58Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="d:\$c00peN\MVC\ClsPrac\Authentication_User\Authentication_User\Controllers" File="HomeController.cs" Line="135">Replace the term 'LogIn' in member name 'HomeController.LogIn(FormCollection)' with the preferred alternate 'LogOn'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2017-06-15 08:46:58Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="d:\$c00peN\MVC\ClsPrac\Authentication_User\Authentication_User\Controllers" File="HomeController.cs" Line="136">In externally visible method 'HomeController.LogIn(FormCollection)', validate parameter 'formcl' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WelCome()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="WelCome" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2017-06-15 08:46:58Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="d:\$c00peN\MVC\ClsPrac\Authentication_User\Authentication_User\Controllers" File="HomeController.cs" Line="148">The compound word 'WelCome' in member name 'HomeController.WelCome()' exists as a discrete term. If your usage is intended to be single word, case it as 'Welcome' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Wel" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-06-15 08:46:58Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="d:\$c00peN\MVC\ClsPrac\Authentication_User\Authentication_User\Controllers" File="HomeController.cs" Line="148">Correct the spelling of 'Wel' in member name 'HomeController.WelCome()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="AuthenticationUser.Models">
       <Types>
        <Type Name="All_User" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2017-06-15 08:46:58Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'All_User'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="AllUserMetaData" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="MetaData" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2017-06-15 08:46:58Z" FixCategory="Breaking">
           <Issue Name="TypeShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'MetaData' in type name 'AllUserMetaData' exists as a discrete term. If your usage is intended to be single word, case it as 'Metadata'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ClsPrac2Entities_Context" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Prac" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2017-06-15 08:46:58Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Prac' in type name 'ClsPrac2Entities_Context'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2017-06-15 08:46:58Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'ClsPrac2Entities_Context'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#All_User" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2017-06-15 08:46:58Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'ClsPrac2Entities_Context.All_User'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Permission" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Status="Active" Created="2017-06-15 08:46:58Z" FixCategory="Breaking">
           <Issue Name="TypeNoAlternate" Certainty="95" Level="CriticalError">Rename type name 'Permission' so that it does not end in 'Permission'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#All_User" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2017-06-15 08:46:58Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Permission.All_User'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#P_Id" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2017-06-15 08:46:58Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Permission.P_Id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#R_Id" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="RId" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2017-06-15 08:46:58Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'RId' in member name 'Permission.R_Id' exists as a discrete term. If your usage is intended to be single word, case it as 'Rid' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2017-06-15 08:46:58Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Permission.R_Id'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#U_Id" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2017-06-15 08:46:58Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'Permission.U_Id'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Roll" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214" Status="Active" Created="2017-06-15 08:46:58Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="d:\$c00peN\MVC\ClsPrac\Authentication_User\Authentication_User\Models" File="Roll.cs" Line="17">'Roll.Roll()' contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: &#xD;&#xA;&#xD;&#xA;Roll..ctor()&#xD;&#xA;Roll.set_Permissions(ICollection&lt;Permission&gt;):Void</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Permissions" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Status="Active" Created="2017-06-15 08:46:58Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning">Change 'Roll.Permissions' to be read-only by removing the property setter.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020">
   <Name>Avoid namespaces with few types</Name>
   <Description>A namespace should generally have more than five types.</Description>
   <Resolution Name="Default">Consider merging the types defined in '{0}' with another namespace.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182130(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227">
   <Name>Collection properties should be read only</Name>
   <Description>Properties that return collections should be read-only so that users cannot entirely replace the backing store. Users can still modify the contents of the collection by calling relevant methods on the collection. Note that the XmlSerializer class has special support for deserializing read-only collections. See the XmlSerializer overview for more information.</Description>
   <Resolution Name="Default">Change {0} to be read-only by removing the property setter.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182327(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702">
   <Name>Compound words should be cased correctly</Name>
   <Description>Avoid creating compound words from terms which exist in the dictionary as discrete terms. Do not create a compound word such as 'StopWatch' or 'PopUp'. These terms are recognized in the dictionary and should be cased as 'Stopwatch' and 'Popup'.</Description>
   <Resolution Name="MemberShouldBeDiscreteTerm">The compound word '{0}' in member name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}' or strip the first token entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="TypeShouldBeDiscreteTerm">The compound word '{0}' in type name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264474(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="80">Error</MessageLevel>
   <File Name="namingrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026">
   <Name>Default parameters should not be used</Name>
   <Description>Some programming languages do not support default parameters. Replace default parameters with method overloads that supply the default argument.</Description>
   <Resolution Name="Default">Replace method {0} with an overload that supplies all default arguments.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182135(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCallOverridableMethodsInConstructors" Category="Microsoft.Usage" CheckId="CA2214">
   <Name>Do not call overridable methods in constructors</Name>
   <Description>Virtual methods defined on the class should not be called from constructors. If a derived class has overridden the method, the derived class version will be called (before the derived class constructor is called).</Description>
   <Resolution Name="Default">{0} contains a call chain that results in a call to a virtual method defined by the class. Review the following call stack for unintended consequences: {1}</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182331(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="usagerules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="Type">Correct the spelling of '{0}' in type name {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707">
   <Name>Identifiers should not contain underscores</Name>
   <Description>Do not use underscores when specifying identifiers. Some generated Visual Studio identifiers for applications contain underscore characters. Underscore characters should generally be avoided in public identifiers.</Description>
   <Resolution Name="Assembly">Remove the underscores from assembly name {0}.</Resolution>
   <Resolution Name="Member">Remove the underscores from member name {0}.</Resolution>
   <Resolution Name="Type">Remove the underscores from type name {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182245(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711">
   <Name>Identifiers should not have incorrect suffix</Name>
   <Description>Types that do not extend certain base types should not use reserved name suffixes. Types and members should not use 'Ex' or 'New' to distinguish them from an earlier version of the same API, instead, use a numeric suffix such as '2' or provide a more meaningful suffix. Concrete type implementations and members should not end 'Impl'. Members instead, should either consider using the suggested alternate 'Core' in replacement of 'Impl' or avoid any suffix at all.</Description>
   <Resolution Name="TypeNoAlternate">Rename type name {0} so that it does not end in '{1}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182247(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="namingrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>Mark members as static</Name>
   <Description>Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</Description>
   <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053">
   <Name>Static holder types should not have constructors</Name>
   <Description>Instances of types that define only static members do not need to be created. Many compilers will automatically add a public default constructor if no constructor is specified. To prevent this, adding an empty private constructor may be required.</Description>
   <Resolution Name="CSharp2_0">Because type {0} contains only 'static' members, mark it as 'static' to prevent the compiler from adding a default public constructor.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182169(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726">
   <Name>Use preferred terms</Name>
   <Description>Use preferred terms over deprecated alternates.</Description>
   <Resolution Name="Member">Replace the term '{0}' in member name {1} with the preferred alternate '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182258(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062">
   <Name>Validate arguments of public methods</Name>
   <Description>All reference arguments passed to externally visible methods should be checked against null (Nothing in VB). If appropriate, throw a System.ArgumentNullException when the argument is null.</Description>
   <Resolution Name="Default">In externally visible method {0}, validate parameter '{1}' before using it.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182182(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="11.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
